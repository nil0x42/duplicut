name: Unit Tests

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      fail-fast: false # quit as soon as a job fails
      matrix:
        os: [ ubuntu-22.04, ubuntu-18.04, macos-latest ]
        compiler: [ "gcc-9", "gcc-12", "clang" ]
        # exclude:
        #   - os: macos-latest
        #     compiler: clang
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    timeout-minutes: 8


    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - if: startsWith(matrix.os, 'macOS')
        name: "MacOS: Install coreutils (provides GNU core utils)"
        run: |
          brew install coreutils
          echo "$(brew --prefix)/opt/gnu-sed/libexec/gnubin" >> $GITHUB_PATH

      - if: startsWith(matrix.os, 'macOS')
        name: "MacOS: Install tools"
        run: brew install ctags expect

      - if: startsWith(matrix.os, 'ubuntu')
        name: "Linux: Install tools"
        run: sudo apt-get install -y exuberant-ctags expect-dev

      - name: Install compiler (${{ matrix.compiler }})
        uses: rlalik/setup-cpp-compiler@v1.1
        with:
          compiler: ${{ matrix.compiler }}

      - name: Run duplicut unit tests
        run: stdbuf -oL -eL ./test/run.sh 2>&1
        env:
          ARCH: x64

      - name: Generate coverage files
        run: gcov -abcfu objects/*

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          # flags: unittests
          env_vars: OS,CC
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)
          # files: *.gcov
